{"version":3,"sources":["static/images/main.jpg","SearchPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["history","useHistory","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","push","Typography","variant","style","flexGrow","textAlign","Card","margin","CardMedia","width","height","image","backgroundPicture","title","CardContent","TextField","id","label","CardActions","Button","size","images","url","useStyles","makeStyles","theme","topRoot","spacing","root","display","flexWrap","minWidth","breakpoints","down","zIndex","opacity","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","palette","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","padding","imageMarked","FirstPage","classes","Paper","elevation","className","CardHeader","map","ButtonBase","focusRipple","focusVisibleClassName","backgroundImage","component","App","basename","process","exact","path","SearchPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAAe,MAA0B,iCCqB1B,aACb,IAAMA,EAAUC,cAEhB,OACE,qCACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,MAAM,UACNC,aAAW,OACXC,QAAS,WACPT,EAAQU,KAAK,MALjB,SAQE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAO,CAAEC,SAAU,EAAGC,UAAW,UAA1D,iFAKJ,eAACC,EAAA,EAAD,CAAMH,MAAO,CAAEI,OAAQ,IAAvB,UACE,cAACC,EAAA,EAAD,CACEL,MAAO,CAAEM,MAAO,OAAQC,OAAQ,KAChCC,MAAOC,EACPC,MAAM,0BAER,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,GAAG,aAAaC,MAAM,6BACjC,cAACF,EAAA,EAAD,CAAWC,GAAG,aAAaC,MAAM,0BAEnC,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQvB,MAAM,UAAUK,QAAQ,YAA7C,mCCrCJmB,EAAS,CACb,CACEC,IAAKV,EACLC,MAAO,eACPJ,MAAO,SAILc,EAAYC,aAAW,SAACC,GAAD,YAAY,CACvCC,QAAS,CACP,QAAS,CACPnB,OAAQkB,EAAME,QAAQ,KAI1BC,KAAM,CACJC,QAAS,OACTC,SAAU,OACVC,SAAU,IACVtB,MAAO,QAETE,OAAK,GACHlB,SAAU,WACViB,OAAQ,KAFL,cAGFe,EAAMO,YAAYC,KAAK,MAAQ,CAC9BxB,MAAO,kBACPC,OAAQ,MALP,cAOH,0BAA2B,CACzBwB,OAAQ,EACR,mBAAoB,CAClBC,QAAS,KAEX,iBAAkB,CAChBA,QAAS,GAEX,gBAAiB,CACfC,OAAQ,4BAhBT,GAoBLC,aAAc,GACdC,YAAa,CACX7C,SAAU,WACV8C,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,EACRb,QAAS,OACTc,WAAY,SACZC,eAAgB,SAChB/C,MAAO4B,EAAMoB,QAAQC,OAAOC,OAE9BC,SAAU,CACRvD,SAAU,WACV8C,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,EACRO,eAAgB,QAChBC,mBAAoB,cAEtBC,cAAe,CACb1D,SAAU,WACV8C,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,EACRU,gBAAiB3B,EAAMoB,QAAQC,OAAOO,MACtClB,QAAS,GACTmB,WAAY7B,EAAM8B,YAAYC,OAAO,YAEvCC,WAAY,CACVhE,SAAU,WACViE,QAAQ,GAAD,OAAKjC,EAAME,QAAQ,GAAnB,cAA2BF,EAAME,QAAQ,GAAzC,cACLF,EAAME,QAAQ,GAAK,EADd,OAITgC,YAAa,CACXjD,OAAQ,EACRD,MAAO,GACP2C,gBAAiB3B,EAAMoB,QAAQC,OAAOC,MACtCtD,SAAU,WACViD,QAAS,EACTH,KAAM,kBACNe,WAAY7B,EAAM8B,YAAYC,OAAO,gBAInCI,EAAY,WAChB,IAAMtE,EAAUC,cACVsE,EAAUtC,IAEhB,OACE,cAACuC,EAAA,EAAD,CAAOC,UAAW,EAAGC,UAAWH,EAAQnC,QAAxC,SACE,eAACpB,EAAA,EAAD,WACE,cAAC2D,EAAA,EAAD,CAAYpD,MAAM,6DAClB,cAACC,EAAA,EAAD,UACE,qBAAKkD,UAAWH,EAAQjC,KAAxB,SACGP,EAAO6C,KAAI,SAACvD,GAAD,OACV,eAACwD,EAAA,EAAD,CACEC,aAAW,EAEXJ,UAAWH,EAAQlD,MACnB0D,sBAAuBR,EAAQxB,aAC/BtC,QAAS,WACPT,EAAQU,KAAK,YAEfG,MAAO,CACLM,MAAOE,EAAMF,OATjB,UAYE,sBACEuD,UAAWH,EAAQb,SACnB7C,MAAO,CACLmE,gBAAgB,OAAD,OAAS3D,EAAMW,IAAf,QAGnB,sBAAM0C,UAAWH,EAAQV,gBACzB,sBAAMa,UAAWH,EAAQvB,YAAzB,SACE,eAACrC,EAAA,EAAD,CACEsE,UAAU,OACVrE,QAAQ,YACRL,MAAM,UACNmE,UAAWH,EAAQJ,WAJrB,UAMG9C,EAAME,MACP,sBAAMmD,UAAWH,EAAQF,qBAzBxBhD,EAAME,oBAqCZ,SAAS2D,IACtB,OACE,cAAC,IAAD,CAAQC,SAAmCC,WAA3C,SACE,8BAGE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAlB,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,IAAZ,SACE,cAAC,EAAD,aCrKZ,IAYeE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjB,EAAD,MAEFkB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.53ad23f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/main.3c5118f0.jpg\";","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  AppBar,\n  Button,\n  ButtonBase,\n  Card,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  IconButton,\n  Paper,\n  TextField,\n  Typography,\n  Toolbar,\n  CardActions,\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\nimport backgroundPicture from \"./static/images/main.jpg\";\n\nexport default () => {\n  const history = useHistory();\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => {\n              history.push(\"/\");\n            }}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Typography variant=\"h6\" style={{ flexGrow: 1, textAlign: \"center\" }}>\n            請輸入您的 大名 或者 Email\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Card style={{ margin: 10 }}>\n        <CardMedia\n          style={{ width: \"100%\", height: 340 }}\n          image={backgroundPicture}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <TextField id=\"name-input\" label=\"您的大名\" />\n          <TextField id=\"name-input\" label=\"您的 Email\" />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" variant=\"contained\">\n            查詢\n          </Button>\n        </CardActions>\n      </Card>\n    </>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  ButtonBase,\n  Card,\n  CardContent,\n  CardHeader,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nimport SearchPage from \"./SearchPage\";\nimport backgroundPicture from \"./static/images/main.jpg\";\n\nconst images = [\n  {\n    url: backgroundPicture,\n    title: \"開始\",\n    width: \"100%\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  topRoot: {\n    \"& > *\": {\n      margin: theme.spacing(5),\n    },\n  },\n\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    minWidth: 300,\n    width: \"100%\",\n  },\n  image: {\n    position: \"relative\",\n    height: 800,\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100% !important\", // Overrides inline-style\n      height: 300,\n    },\n    \"&:hover, &$focusVisible\": {\n      zIndex: 1,\n      \"& $imageBackdrop\": {\n        opacity: 0.15,\n      },\n      \"& $imageMarked\": {\n        opacity: 0,\n      },\n      \"& $imageTitle\": {\n        border: \"4px solid currentColor\",\n      },\n    },\n  },\n  focusVisible: {},\n  imageButton: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: theme.palette.common.white,\n  },\n  imageSrc: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center 40%\",\n  },\n  imageBackdrop: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create(\"opacity\"),\n  },\n  imageTitle: {\n    position: \"relative\",\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${\n      theme.spacing(1) + 6\n    }px`,\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.white,\n    position: \"absolute\",\n    bottom: -2,\n    left: \"calc(50% - 9px)\",\n    transition: theme.transitions.create(\"opacity\"),\n  },\n}));\n\nconst FirstPage = () => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={3} className={classes.topRoot}>\n      <Card>\n        <CardHeader title=\"懷倫-冠陵電子喜帖 v0.0.1\" />\n        <CardContent>\n          <div className={classes.root}>\n            {images.map((image) => (\n              <ButtonBase\n                focusRipple\n                key={image.title}\n                className={classes.image}\n                focusVisibleClassName={classes.focusVisible}\n                onClick={() => {\n                  history.push(\"/search\");\n                }}\n                style={{\n                  width: image.width,\n                }}\n              >\n                <span\n                  className={classes.imageSrc}\n                  style={{\n                    backgroundImage: `url(${image.url})`,\n                  }}\n                />\n                <span className={classes.imageBackdrop} />\n                <span className={classes.imageButton}>\n                  <Typography\n                    component=\"span\"\n                    variant=\"subtitle1\"\n                    color=\"inherit\"\n                    className={classes.imageTitle}\n                  >\n                    {image.title}\n                    <span className={classes.imageMarked} />\n                  </Typography>\n                </span>\n              </ButtonBase>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </Paper>\n  );\n};\n\nexport default function App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL ? process.env.PUBLIC_URL : \"/\"}>\n      <div>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route exact path=\"/search\">\n            <SearchPage />\n          </Route>\n          <Route path=\"/\">\n            <FirstPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}